// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "rectcovereditgroup.hpp"
#include "mainwindow.hpp"

void RectCoverEditGroup::cb_8_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetOffset(0, m_VSResolution->value());
        extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
};
}
void RectCoverEditGroup::cb_8(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_8_i(o,v);
}

void RectCoverEditGroup::cb_2_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetOffset(0, 0 - m_VSResolution->value());
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();

};
}
void RectCoverEditGroup::cb_2(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_2_i(o,v);
}

void RectCoverEditGroup::cb_4_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetOffset(m_VSResolution->value(), 0);
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();

};
}
void RectCoverEditGroup::cb_4(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_4_i(o,v);
}

void RectCoverEditGroup::cb__i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetOffset(0 - m_VSResolution->value(), 0);
        extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
};
}
void RectCoverEditGroup::cb_(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb__i(o,v);
}

void RectCoverEditGroup::cb_1_i(Fl_Button*, void*) {
  extern AnimationSet g_AnimationSet;
g_AnimationSet.FirstFrame();
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
}
void RectCoverEditGroup::cb_1(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_1_i(o,v);
}

void RectCoverEditGroup::cb_11_i(Fl_Button*, void*) {
  extern AnimationSet g_AnimationSet;
g_AnimationSet.PreviousFrame();
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
}
void RectCoverEditGroup::cb_11(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_11_i(o,v);
}

void RectCoverEditGroup::cb_12_i(Fl_Button*, void*) {
  extern AnimationSet g_AnimationSet;
g_AnimationSet.NextFrame();
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
}
void RectCoverEditGroup::cb_12(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_12_i(o,v);
}

void RectCoverEditGroup::cb_13_i(Fl_Button*, void*) {
  extern AnimationSet g_AnimationSet;
g_AnimationSet.LastFrame();
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();
}
void RectCoverEditGroup::cb_13(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_13_i(o,v);
}

void RectCoverEditGroup::cb_W_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetW(0 - m_VSResolution->value());
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();

};
}
void RectCoverEditGroup::cb_W(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_W_i(o,v);
}

void RectCoverEditGroup::cb_W1_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetW(m_VSResolution->value());
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();

};
}
void RectCoverEditGroup::cb_W1(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_W1_i(o,v);
}

void RectCoverEditGroup::cb_H_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetH(0 - m_VSResolution->value());
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();


};
}
void RectCoverEditGroup::cb_H(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_H_i(o,v);
}

void RectCoverEditGroup::cb_H1_i(Fl_Button*, void*) {
  {
    extern MainWindow *g_MainWindow;
    if(!g_MainWindow->EnableEdit()){
        return;
    }
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.DSetH(m_VSResolution->value());
    extern MainWindow *g_MainWindow;
    g_MainWindow->RedrawAll();

};
}
void RectCoverEditGroup::cb_H1(Fl_Button* o, void* v) {
  ((RectCoverEditGroup*)(o->parent()))->cb_H1_i(o,v);
}
RectCoverEditGroup::RectCoverEditGroup(int X, int Y, int W, int H, const char *L)
  : Fl_Group(0, 0, W, H, L) {
{ Fl_Button* o = new Fl_Button(106, 22, 50, 50, "@8->");
  o->callback((Fl_Callback*)cb_8);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(106, 120, 50, 50, "@2->");
  o->callback((Fl_Callback*)cb_2);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(57, 71, 50, 50, "@4->");
  o->callback((Fl_Callback*)cb_4);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(155, 71, 50, 50, "@->");
  o->callback((Fl_Callback*)cb_);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(15, 184, 60, 40, "@-1|<");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_1);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(75, 184, 60, 40, "@-1<-");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_11);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(135, 184, 60, 40, "@-1->");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_12);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(195, 184, 60, 40, "@-1>|");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_13);
} // Fl_Button* o
{ m_VSResolution = new Fl_Value_Slider(28, 315, 205, 20, "Resolution");
  m_VSResolution->type(1);
  m_VSResolution->labelfont(4);
  m_VSResolution->minimum(1);
  m_VSResolution->maximum(100);
  m_VSResolution->step(1);
  m_VSResolution->value(1);
  m_VSResolution->textfont(4);
  m_VSResolution->textsize(14);
} // Fl_Value_Slider* m_VSResolution
{ Fl_Group* o = new Fl_Group(15, 245, 230, 55);
  o->labelfont(4);
  { m_RadioBtnNoneCopy = new Fl_Round_Button(40, 281, 64, 15, "None");
    m_RadioBtnNoneCopy->type(102);
    m_RadioBtnNoneCopy->down_box(FL_ROUND_DOWN_BOX);
    m_RadioBtnNoneCopy->labelfont(4);
  } // Fl_Round_Button* m_RadioBtnNoneCopy
  { m_RadioBtnSameCopy = new Fl_Round_Button(105, 281, 64, 15, "Same");
    m_RadioBtnSameCopy->type(102);
    m_RadioBtnSameCopy->down_box(FL_ROUND_DOWN_BOX);
    m_RadioBtnSameCopy->labelfont(4);
  } // Fl_Round_Button* m_RadioBtnSameCopy
  { m_RadioBtnDualCopy = new Fl_Round_Button(170, 281, 64, 15, "Dual");
    m_RadioBtnDualCopy->type(102);
    m_RadioBtnDualCopy->down_box(FL_ROUND_DOWN_BOX);
    m_RadioBtnDualCopy->value(1);
    m_RadioBtnDualCopy->labelfont(4);
  } // Fl_Round_Button* m_RadioBtnDualCopy
  o->end();
} // Fl_Group* o
{ Fl_Button* o = new Fl_Button(15, 224, 60, 40, "-W");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_W);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(75, 224, 60, 40, "+W");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_W1);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(135, 224, 60, 40, "-H");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_H);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(195, 224, 60, 40, "+H");
  o->labelfont(4);
  o->callback((Fl_Callback*)cb_H1);
} // Fl_Button* o
position(X, Y);
end();
}

int RectCoverEditGroup::RectCoverCopyMethod() {
  {
      if(m_RadioBtnNoneCopy->value()){
          return 0;
      }else if(m_RadioBtnSameCopy->value()){
          return 1;
      }else{
          return 2;
      }
  }
}
