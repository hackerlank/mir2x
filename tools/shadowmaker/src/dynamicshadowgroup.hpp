// generated by Fast Light User Interface Designer (fluid) version 1.0303

#ifndef dynamicshadowgroup_hpp
#define dynamicshadowgroup_hpp
#include <FL/Fl.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
#include "animationset.hpp"
#include <FL/Fl_Value_Slider.H>
#include <FL/Fl_Round_Button.H>
#include <FL/Fl_Choice.H>

class DynamicShadowGroup : public Fl_Group {
public:
  DynamicShadowGroup(int X, int Y, int W, int H, const char *L = 0);
private:
  inline void cb_8_i(Fl_Button*, void*);
  static void cb_8(Fl_Button*, void*);
  inline void cb_2_i(Fl_Button*, void*);
  static void cb_2(Fl_Button*, void*);
  inline void cb_4_i(Fl_Button*, void*);
  static void cb_4(Fl_Button*, void*);
  inline void cb__i(Fl_Button*, void*);
  static void cb_(Fl_Button*, void*);
public:
  Fl_Value_Slider *m_VSResolution;
private:
  inline void cb_1_i(Fl_Button*, void*);
  static void cb_1(Fl_Button*, void*);
  inline void cb_3_i(Fl_Button*, void*);
  static void cb_3(Fl_Button*, void*);
  inline void cb_5_i(Fl_Button*, void*);
  static void cb_5(Fl_Button*, void*);
  inline void cb_6_i(Fl_Button*, void*);
  static void cb_6(Fl_Button*, void*);
public:
  Fl_Group *m_PointGroup;
  Fl_Round_Button *m_DS1;
  Fl_Round_Button *m_DS2;
  Fl_Choice *m_Method;
  static Fl_Menu_Item menu_m_Method[];
private:
  inline void cb_Isometric_i(Fl_Menu_*, void*);
  static void cb_Isometric(Fl_Menu_*, void*);
  inline void cb_Orthogonal_i(Fl_Menu_*, void*);
  static void cb_Orthogonal(Fl_Menu_*, void*);
  inline void cb_Advanced_i(Fl_Menu_*, void*);
  static void cb_Advanced(Fl_Menu_*, void*);
public:
  int Point();
  int Method();
  void Reset();
};
#endif
