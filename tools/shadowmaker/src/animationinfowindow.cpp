// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "animationinfowindow.hpp"
#include <cstdio>

void AnimationInfoWindow::cb_Import_i(Fl_Button*, void*) {
  {
    extern AnimationSet g_AnimationSet;
    extern MainWindow *g_MainWindow;
    m_Window->hide();
    g_MainWindow->LoadAnimationSet();
    g_MainWindow->RedrawAll();

    Fl::remove_timeout(AnimationSet::TimeoutCallback);
    Fl::add_timeout(0.2, AnimationSet::TimeoutCallback, &g_AnimationSet);
    g_MainWindow->AddStatusItem();
    g_MainWindow->ShowAll();
};
}
void AnimationInfoWindow::cb_Import(Fl_Button* o, void* v) {
  ((AnimationInfoWindow*)(o->parent()->user_data()))->cb_Import_i(o,v);
}

void AnimationInfoWindow::cb_Drop_i(Fl_Button*, void*) {
  {
    extern AnimationSet g_AnimationSet;
    g_AnimationSet.Clear();
    extern AnimationPreviewWindow *g_AnimationPreviewWindow;
    g_AnimationPreviewWindow->ShowAll();
    m_Window->hide();
};
}
void AnimationInfoWindow::cb_Drop(Fl_Button* o, void* v) {
  ((AnimationInfoWindow*)(o->parent()->user_data()))->cb_Drop_i(o,v);
}

AnimationInfoWindow::AnimationInfoWindow() {
  m_Buffer = new Fl_Text_Buffer();
  { m_Window = new Fl_Double_Window(452, 357);
    m_Window->labelfont(4);
    m_Window->user_data((void*)(this));
    { m_Display = new Fl_Text_Display(0, 0, 450, 300);
      m_Display->labelfont(4);
      m_Display->textfont(4);
    } // Fl_Text_Display* m_Display
    { Fl_Button* o = new Fl_Button(255, 318, 64, 25, "Import");
      o->labelfont(4);
      o->callback((Fl_Callback*)cb_Import);
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(349, 318, 64, 25, "Drop");
      o->labelfont(4);
      o->callback((Fl_Callback*)cb_Drop);
    } // Fl_Button* o
    m_Window->end();
  } // Fl_Double_Window* m_Window
  m_Display->buffer(m_Buffer);
  Set(12);
}

AnimationInfoWindow::~AnimationInfoWindow() {
  {
      delete m_Window; m_Window = nullptr;
  }
}

void AnimationInfoWindow::Set(int nCount) {
  char szInfo[512];
  
  std::sprintf(szInfo, 
      "hello!\n"
      "count = %d\n",
      nCount
  );
  
  m_Buffer->text(szInfo);
}

void AnimationInfoWindow::ShowAll() {
  {
  	m_Window->show();
  }
}

void AnimationInfoWindow::RedrawAll() {
  {
  	m_Window->redraw();
  }
}

void AnimationInfoWindow::TimeoutCallback() {
  {
  
  }
}
