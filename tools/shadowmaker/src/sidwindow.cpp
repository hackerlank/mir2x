// generated by Fast Light User Interface Designer (fluid) version 1.0303

#include "sidwindow.hpp"

void SIDWindow::cb_OK_i(Fl_Button*, void*) {
  {
    m_Window->hide();
};
}
void SIDWindow::cb_OK(Fl_Button* o, void* v) {
  ((SIDWindow*)(o->parent()->user_data()))->cb_OK_i(o,v);
}

Fl_Menu_Item SIDWindow::menu_m_Gender[] = {
 {"Male", 0,  0, 0, 0, FL_NORMAL_LABEL, 4, 14, 0},
 {"Female", 0,  0, 0, 0, FL_NORMAL_LABEL, 4, 14, 0},
 {0,0,0,0,0,0,0,0,0}
};

SIDWindow::SIDWindow() {
  { m_Window = new Fl_Double_Window(379, 195, "Please Set Human LID");
    m_Window->labelfont(4);
    m_Window->user_data((void*)(this));
    { m_Input = new Fl_Value_Input(139, 25, 140, 25, "BaseLID: ");
      m_Input->labelfont(4);
      m_Input->value(1024);
      m_Input->textfont(4);
    } // Fl_Value_Input* m_Input
    { Fl_Button* o = new Fl_Button(255, 145, 64, 25, "OK");
      o->labelfont(4);
      o->callback((Fl_Callback*)cb_OK);
    } // Fl_Button* o
    { m_Gender = new Fl_Choice(139, 73, 140, 25, "Gender: ");
      m_Gender->down_box(FL_BORDER_BOX);
      m_Gender->labelfont(4);
      m_Gender->textfont(4);
      m_Gender->menu(menu_m_Gender);
    } // Fl_Choice* m_Gender
    m_Window->end();
  } // Fl_Double_Window* m_Window
}

void SIDWindow::ShowAll() {
  {
      m_Window->show();
  }
}

int SIDWindow::BaseLID() {
  {
      return (int)std::lround(m_Input->value());
  }
}

int SIDWindow::Gender() {
  {
      return (int)m_Gender->value();
  }
}
